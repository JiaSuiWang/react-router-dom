{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jiasui Wang\\\\OneDrive\\\\\\u684C\\u9762\\\\react-typescript\\\\src\\\\components\\\\Query\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport SubQuery from \"./SubQuery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//IProps意思是该函数接受一个这种类型的参数 <参数类型>\n//(参数名) 用这个参数名的形参，来接受实际参数\nconst Query = ({\n  setBeesList,\n  beesList\n}) => {\n  _s();\n\n  //定义变量\n  const [params, setParams] = useState({\n    fuel: '1',\n    damage: '2'\n  }); //定义响应的API1\n  //绑定在onChange事件的函数一定有一个ChangeEvent<HTMLInputElement>类型的参数\n  //这个函数有两个功能：1.触发视图更新 2.修改变量的值\n\n  const handleChange = (event, key) => {\n    //这里触发的输入框的视图更新\n    setParams({ ...params,\n      //解构 看ES6\n      [key]: event.target.value //获取到更新的对象的值  //[key]代表解构出来对象名为key的键\n\n    }); // Object.assign(params, { fuel: event.target.value })\n    //对象合并，后面的覆盖掉，其他不动\n  }; //定义响应的API2\n\n\n  const handleEearch = () => {\n    console.log(params);\n    const a = [{\n      id: 1,\n      speed: 1.1,\n      latitude: 2,\n      longitude: 3,\n      elevation: 4,\n      fuel: 5,\n      damage: 6,\n      nectar: 7,\n      honey: 8,\n      tansformationRate: 10\n    }];\n    setBeesList(a);\n  };\n\n  const handleAdd = () => {\n    //添加了以后一定要查询一下，因为满足条件的条目会多一些\n    let arr = [{\n      id: Number(Math.random().toFixed(2)),\n      speed: Number(Math.random().toFixed(2)),\n      latitude: Number(Math.random().toFixed(2)),\n      longitude: Number(Math.random().toFixed(2)),\n      elevation: Number(Math.random().toFixed(2)),\n      fuel: Number(Math.random().toFixed(2)),\n      damage: Number(Math.random().toFixed(2)),\n      nectar: Number(Math.random().toFixed(2)),\n      honey: Number(Math.random().toFixed(2)),\n      tansformationRate: Number(Math.random().toFixed(2))\n    }];\n    setBeesList(beesList.concat(arr)); //把原来的数组和现在的arr合并一下\n  };\n\n  const handleReset = () => {\n    setParams({\n      fuel: '',\n      damage: ''\n    });\n    handleEearch();\n  }; //listen 监听函数\n  // useEffect(() => {\n  //     const fetch = () => {\n  //         //做请求\n  //         console.log(\"请求数据\")\n  //     }\n  //     fetch();\n  // }, [params])\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: [\"Fuel(\", '<', \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => handleChange(e, 'fuel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: [\"Damage(\", '>', \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: params.damage,\n        onChange: e => handleChange(e, 'damage')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEearch,\n      children: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleReset,\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SubQuery, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Query, \"erxba2UvcpJVgKdyAwTr9gInUIU=\");\n\n_c = Query;\nexport default Query;\n\nvar _c;\n\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"sources":["C:/Users/Jiasui Wang/OneDrive/桌面/react-typescript/src/components/Query/index.tsx"],"names":["React","useState","SubQuery","Query","setBeesList","beesList","params","setParams","fuel","damage","handleChange","event","key","target","value","handleEearch","console","log","a","id","speed","latitude","longitude","elevation","nectar","honey","tansformationRate","handleAdd","arr","Number","Math","random","toFixed","concat","handleReset","e"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FC, useEffect, useState } from \"react\"\r\nimport { IBeesProps } from \"../../interface/App\"\r\nimport SubQuery from \"./SubQuery\"\r\n\r\n\r\ninterface IParamsProps {\r\n    fuel: string;\r\n    damage: string;\r\n}\r\n\r\ninterface IProps {\r\n    setBeesList: React.Dispatch<React.SetStateAction<IBeesProps[]>>;\r\n    beesList: IBeesProps[]\r\n}\r\n\r\n//IProps意思是该函数接受一个这种类型的参数 <参数类型>\r\n//(参数名) 用这个参数名的形参，来接受实际参数\r\nconst Query: FC<IProps> = ({ setBeesList, beesList }): JSX.Element => {\r\n\r\n    //定义变量\r\n    const [params, setParams] = useState<IParamsProps>({\r\n        fuel: '1',\r\n        damage: '2'\r\n    })\r\n\r\n    //定义响应的API1\r\n    //绑定在onChange事件的函数一定有一个ChangeEvent<HTMLInputElement>类型的参数\r\n    //这个函数有两个功能：1.触发视图更新 2.修改变量的值\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>, key: string): void => {\r\n        //这里触发的输入框的视图更新\r\n        setParams({\r\n            ...params, //解构 看ES6\r\n            [key]: event.target.value //获取到更新的对象的值  //[key]代表解构出来对象名为key的键\r\n        })\r\n        // Object.assign(params, { fuel: event.target.value })\r\n        //对象合并，后面的覆盖掉，其他不动\r\n    }\r\n\r\n    //定义响应的API2\r\n    const handleEearch = (): void => {\r\n        console.log(params)\r\n        const a: any[] = [{\r\n            id: 1,\r\n            speed: 1.1,\r\n            latitude: 2,\r\n            longitude: 3,\r\n            elevation: 4,\r\n            fuel: 5,\r\n            damage: 6,\r\n            nectar: 7,\r\n            honey: 8,\r\n            tansformationRate: 10,\r\n        }]\r\n        setBeesList(a)\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        //添加了以后一定要查询一下，因为满足条件的条目会多一些\r\n        let arr: IBeesProps[] = [\r\n            {\r\n                id: Number(Math.random().toFixed(2)),\r\n                speed: Number(Math.random().toFixed(2)),\r\n                latitude: Number(Math.random().toFixed(2)),\r\n                longitude: Number(Math.random().toFixed(2)),\r\n                elevation: Number(Math.random().toFixed(2)),\r\n                fuel: Number(Math.random().toFixed(2)),\r\n                damage: Number(Math.random().toFixed(2)),\r\n                nectar: Number(Math.random().toFixed(2)),\r\n                honey: Number(Math.random().toFixed(2)),\r\n                tansformationRate: Number(Math.random().toFixed(2))\r\n            }\r\n        ]\r\n        setBeesList(beesList.concat(arr)); //把原来的数组和现在的arr合并一下\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setParams({\r\n            fuel: '',\r\n            damage: ''\r\n        })\r\n        handleEearch()\r\n    }\r\n\r\n\r\n    //listen 监听函数\r\n    // useEffect(() => {\r\n    //     const fetch = () => {\r\n    //         //做请求\r\n    //         console.log(\"请求数据\")\r\n    //     }\r\n    //     fetch();\r\n    // }, [params])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p><b>Search</b></p>\r\n            <form action=\"\">\r\n                <label htmlFor=\"\">Fuel({'<'}%)</label>\r\n                {/* <input type=\"text\" value={params.fuel} onChange={(e) => handleChange(e, 'fuel')} /> */}\r\n                <input type=\"text\" onChange={(e) => handleChange(e, 'fuel')} />\r\n            </form>\r\n            <form action=\"\">\r\n                <label htmlFor=\"\">Damage({'>'}%)</label>\r\n                <input type=\"text\" value={params.damage} onChange={(e) => handleChange(e, 'damage')} />\r\n            </form>\r\n            <button onClick={handleEearch}>search</button>\r\n            <button onClick={handleReset}>reset</button>\r\n            <button onClick={handleAdd}>add</button>\r\n            <SubQuery />\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default Query;\r\n"]},"metadata":{},"sourceType":"module"}