{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jiasui Wang\\\\OneDrive\\\\\\u684C\\u9762\\\\react-typescript\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\n/*\n * @Descripttion: \n * @version: v0.0.1\n * @Author: 静哥哥\n * @Date: 2021-04-07 08:26:41\n * @LastEditors: 静哥哥\n * @LastEditTime: 2021-04-07 08:51:51\n * @FilePath: \\my-app\\src\\App.tsx\n */\nimport React, { useEffect, useState } from 'react';\nimport { Fragment } from 'react';\nimport './App.css';\nimport ClassComponent from './components/class-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// 这种写法是hook的写法\nconst App = ({\n  name = '姓名',\n  age = 18\n}) => {\n  _s();\n\n  // 定义变量，变量变化触发视图变化\n  const [count, setCount] = useState(0); // 这里定义方法\n\n  const handleClick = () => {\n    setCount(count + 1);\n  };\n\n  useEffect(() => {\n    console.log(\"这里是生命周期，做数据请求\");\n    console.log(\"下面这个数组，是做依赖，要是下面数组里面的东西变化了，这里的代码就会在一次执行， 你点击按钮试试\");\n  }, [count]);\n  return (\n    /*#__PURE__*/\n    // 每个文件下面只能有一个元素，可以用任何元素包裹起来，用Fragment就是一个空元素\n    _jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid black',\n          padding: 20,\n          width: 600\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [name, \": \", age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u8FD9\\u91CC\\u662F\\u7236\\u7EC4\\u4EF6\\u7EC4\\u4EF6\\uFF0C\\u8DDF\\u5B50\\u7EC4\\u4EF6\\u7684\\u529F\\u80FD\\u4E00\\u6837\\uFF0C\\u53EA\\u662F\\u5199\\u6CD5\\u662Fhook\\u5199\\u6CD5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u70B9\\u51FB\\u8FD9\\u6309\\u94AE\\uFF0C\\u7136\\u540E\\u770B\\u770B\\u63A7\\u5236\\u53F0\\uFF0C\\u8C37\\u6B4C\\u6D4F\\u89C8\\u5668\\u70B9\\u51FBF12, \\u67E5\\u770Bconsole\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClick,\n          children: [\"\\u8FD9\\u91CC\\u662Fcount\\u7684\\u503C\", count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ClassComponent, {\n        name: '传给子组件的姓名',\n        age: 18\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(App, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jiasui Wang/OneDrive/桌面/react-typescript/src/App.tsx"],"names":["React","useEffect","useState","Fragment","ClassComponent","App","name","age","count","setCount","handleClick","console","log","border","padding","width"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAoBC,SAApB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,WAAP;AACA,OAAOC,cAAP,MAA2B,8BAA3B;;;AAOA;AACA,MAAMC,GAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,IAAT;AAAeC,EAAAA,GAAG,GAAG;AAArB,CAAD,KAA+B;AAAA;;AACnD;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAS,CAAT,CAAlC,CAFmD,CAInD;;AACA,QAAMQ,WAAW,GAAG,MAAY;AAC5BD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH,GAFD;;AAIAP,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACH,GAHQ,EAGN,CAACJ,KAAD,CAHM,CAAT;AAKA;AAAA;AACI;AACA,YAAC,QAAD;AAAA,8BACI;AAAK,QAAA,KAAK,EAAE;AAAEK,UAAAA,MAAM,EAAE,iBAAV;AAA6BC,UAAAA,OAAO,EAAE,EAAtC;AAA0CC,UAAAA,KAAK,EAAE;AAAjD,SAAZ;AAAA,gCACI;AAAA,qBAAIT,IAAJ,QAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAQ,UAAA,OAAO,EAAEG,WAAjB;AAAA,4DAAyCF,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,cAAD;AACI,QAAA,IAAI,EAAE,UADV;AAEI,QAAA,GAAG,EAAE;AAFT;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAeH,CA7BD;;GAAMH,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["/*\n * @Descripttion: \n * @version: v0.0.1\n * @Author: 静哥哥\n * @Date: 2021-04-07 08:26:41\n * @LastEditors: 静哥哥\n * @LastEditTime: 2021-04-07 08:51:51\n * @FilePath: \\my-app\\src\\App.tsx\n */\nimport React, { FC, useEffect, useState } from 'react';\nimport { Fragment } from 'react';\nimport './App.css';\nimport ClassComponent from './components/class-component';\n\ninterface IProps {\n    name?: string;\n    age?: number\n}\n\n// 这种写法是hook的写法\nconst App: FC<IProps> = ({ name = '姓名', age = 18 }) => {\n    // 定义变量，变量变化触发视图变化\n    const [count, setCount] = useState<number>(0);\n\n    // 这里定义方法\n    const handleClick = (): void => {\n        setCount(count + 1);\n    }\n\n    useEffect(() => {\n        console.log(\"这里是生命周期，做数据请求\")\n        console.log(\"下面这个数组，是做依赖，要是下面数组里面的东西变化了，这里的代码就会在一次执行， 你点击按钮试试\")\n    }, [count])\n\n    return (\n        // 每个文件下面只能有一个元素，可以用任何元素包裹起来，用Fragment就是一个空元素\n        <Fragment>\n            <div style={{ border: '1px solid black', padding: 20, width: 600 }}>\n                <p>{name}: {age}</p>\n                <p>这里是父组件组件，跟子组件的功能一样，只是写法是hook写法</p>\n                <p>点击这按钮，然后看看控制台，谷歌浏览器点击F12, 查看console</p>\n                <button onClick={handleClick}>这里是count的值{count}</button>\n            </div>\n            <ClassComponent\n                name={'传给子组件的姓名'}\n                age={18}\n            />\n        </Fragment>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}