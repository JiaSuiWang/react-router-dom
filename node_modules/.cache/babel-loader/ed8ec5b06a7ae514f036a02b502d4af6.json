{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jiasui Wang\\\\OneDrive\\\\\\u684C\\u9762\\\\react-typescript\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Represent from \"./components/Represent\";\nimport Query from \"./components/Query\";\nimport Statistics from \"./components/Statististics\";\n/**路径两个重要的点：\n * 1.在node_nodule里面引入依赖不需要写路径\n * 2.用index命名的文件不需要写在引用路径里面\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //两个子组件的通信，状态提升\n  const [beesList, setBeesList] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Statistics, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Query, {\n      setBeesList: setBeesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Represent, {\n      beesList: beesList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"mW+Kv1bHalcRUevQArT9FhWnfp8=\");\n\n_c = App;\nexport default App; //0.如何在react的ts中定义变量和修改变量\n//如果要触发页面视图更新必须使用useState接口\n//1.如何从子组件向父组件进行通信\n//1.父组件需要有相应的参数进行接受，所以用useState接口进行定义参数和方法\n//2.在react中，使用状态提升，将所有的方法都定义到了父组件中，子组件只需要调用方法\n\n/**\n * 在vue中，子 -> 父  $emit() ;    \n *  react 状态提升\n *\n */\n//2.如何从父组件向子组件进行通信\n//1.在子组件中定义好接口，规定好要接受哪些参数\n//2.在父组件中，新建子组件的时候调用接口，传入子组件需要的值\n//3.在子组件中进行展示\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jiasui Wang/OneDrive/桌面/react-typescript/src/App.tsx"],"names":["React","useState","Represent","Query","Statistics","App","beesList","setBeesList"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsC,wBAAtC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA;AACA;AACA;AACA;;;;AAGA,MAAMC,GAAO,GAAG,MAAkB;AAAA;;AAC9B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAe,EAAf,CAAxC;AAEA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,WAAW,EAAEM;AAApB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAXD;;GAAMD,G;;KAAAA,G;AAaN,eAAeA,GAAf,C,CAGA;AACA;AAEA;AACI;AACA;;AACJ;AACA;AACA;AACA;AACA;AAGA;AACI;AACA;AACA","sourcesContent":["import React, {FC, useState} from \"react\";\nimport Represent, { IBeesProps } from \"./components/Represent\"\nimport Query from \"./components/Query\"\nimport Statistics from \"./components/Statististics\"\n\n/**路径两个重要的点：\n * 1.在node_nodule里面引入依赖不需要写路径\n * 2.用index命名的文件不需要写在引用路径里面\n */\n\n\nconst App: FC = ():JSX.Element => {\n    //两个子组件的通信，状态提升\n    const [beesList, setBeesList] = useState<IBeesProps[]>([]);\n\n    return (\n        <div>\n            <Statistics/>\n            <Query setBeesList={setBeesList}/>\n            <Represent beesList={beesList}/>\n        </div>\n    )\n}\n\nexport default App;\n\n\n//0.如何在react的ts中定义变量和修改变量\n//如果要触发页面视图更新必须使用useState接口\n\n//1.如何从子组件向父组件进行通信\n    //1.父组件需要有相应的参数进行接受，所以用useState接口进行定义参数和方法\n    //2.在react中，使用状态提升，将所有的方法都定义到了父组件中，子组件只需要调用方法\n/**\n * 在vue中，子 -> 父  $emit() ;    \n *  react 状态提升\n *\n */\n\n\n//2.如何从父组件向子组件进行通信\n    //1.在子组件中定义好接口，规定好要接受哪些参数\n    //2.在父组件中，新建子组件的时候调用接口，传入子组件需要的值\n    //3.在子组件中进行展示\n"]},"metadata":{},"sourceType":"module"}