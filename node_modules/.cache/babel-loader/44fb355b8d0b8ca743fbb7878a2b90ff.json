{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jiasui Wang\\\\OneDrive\\\\\\u684C\\u9762\\\\react-typescript\\\\src\\\\components\\\\Query\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//IProps意思是该函数接受一个这种类型的参数 <参数类型>\n//(参数名) 用这个参数名的形参，来接受实际参数\nconst Query = ({\n  setBeesList,\n  beesList\n}) => {\n  _s();\n\n  //定义变量\n  const [params, setParams] = useState({\n    fuel: '1',\n    damage: '2'\n  }); //定义响应的API1\n  //绑定在onChange事件的函数一定有一个ChangeEvent<HTMLInputElement>类型的参数\n  //这个函数有两个功能：1.触发视图更新 2.修改变量的值\n\n  const handleChange = (event, key) => {\n    //这里触发的输入框的视图更新\n    setParams({ ...params,\n      //解构 看ES6\n      [key]: event.target.value //获取到更新的对象的值  //[key]代表解构出来对象名为key的键\n\n    }); // Object.assign(params, { fuel: event.target.value })\n    //对象合并，后面的覆盖掉，其他不动\n  }; //定义响应的API2\n\n\n  const handleEearch = () => {\n    console.log(params);\n    const a = [{\n      id: 1,\n      speed: 1.1,\n      latitude: 2,\n      longitude: 3,\n      elevation: 4,\n      fuel: 5,\n      damage: 6,\n      nectar: 7,\n      honey: 8,\n      tansformationRate: 10\n    }];\n    setBeesList(a);\n  };\n\n  const handleAdd = () => {\n    //添加了以后一定要查询一下，因为满足条件的条目会多一些\n    let arr = [{\n      id: Math.random(),\n      speed: Math.random(),\n      latitude: Math.random(),\n      longitude: Math.random(),\n      elevation: Math.random(),\n      fuel: Math.random(),\n      damage: Math.random(),\n      nectar: Math.random(),\n      honey: Math.random(),\n      tansformationRate: Math.random()\n    }];\n    setBeesList(beesList.concat(arr));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: [\"Fuel(\", '<', \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: params.fuel,\n        onChange: e => handleChange(e, 'fuel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"\",\n        children: [\"Damage(\", '>', \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: params.damage,\n        onChange: e => handleChange(e, 'damage')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEearch,\n      children: \"search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"reset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      children: \"add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Query, \"erxba2UvcpJVgKdyAwTr9gInUIU=\");\n\n_c = Query;\nexport default Query;\n\nvar _c;\n\n$RefreshReg$(_c, \"Query\");","map":{"version":3,"sources":["C:/Users/Jiasui Wang/OneDrive/桌面/react-typescript/src/components/Query/index.tsx"],"names":["React","useState","Query","setBeesList","beesList","params","setParams","fuel","damage","handleChange","event","key","target","value","handleEearch","console","log","a","id","speed","latitude","longitude","elevation","nectar","honey","tansformationRate","handleAdd","arr","Math","random","concat","e"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FC, useState } from \"react\"\r\nimport { IBeesProps } from \"../../interface/App\"\r\n\r\n\r\ninterface IParamsProps {\r\n    fuel: string;\r\n    damage: string;\r\n}\r\n\r\ninterface IProps {\r\n    setBeesList: React.Dispatch<React.SetStateAction<IBeesProps[]>>;\r\n    beesList: IBeesProps[]\r\n}\r\n\r\n//IProps意思是该函数接受一个这种类型的参数 <参数类型>\r\n//(参数名) 用这个参数名的形参，来接受实际参数\r\nconst Query: FC<IProps> = ({setBeesList, beesList}): JSX.Element => {\r\n    \r\n    //定义变量\r\n    const [params, setParams] = useState<IParamsProps>({\r\n        fuel: '1',\r\n        damage: '2'\r\n    })\r\n\r\n    //定义响应的API1\r\n    //绑定在onChange事件的函数一定有一个ChangeEvent<HTMLInputElement>类型的参数\r\n    //这个函数有两个功能：1.触发视图更新 2.修改变量的值\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>, key: string): void => {\r\n        //这里触发的输入框的视图更新\r\n        setParams({\r\n            ...params, //解构 看ES6\r\n            [key]: event.target.value //获取到更新的对象的值  //[key]代表解构出来对象名为key的键\r\n        })\r\n        // Object.assign(params, { fuel: event.target.value })\r\n        //对象合并，后面的覆盖掉，其他不动\r\n    }\r\n\r\n    //定义响应的API2\r\n    const handleEearch = ():void => {\r\n        console.log(params)\r\n        const a: any[] = [{\r\n            id: 1, \r\n            speed: 1.1, \r\n            latitude: 2, \r\n            longitude: 3, \r\n            elevation: 4, \r\n            fuel: 5, \r\n            damage: 6, \r\n            nectar: 7, \r\n            honey: 8, \r\n            tansformationRate: 10, \r\n        }]\r\n        setBeesList(a)\r\n    }\r\n\r\n    const handleAdd = () => {\r\n        //添加了以后一定要查询一下，因为满足条件的条目会多一些\r\n        let arr: IBeesProps[] =  [\r\n            {\r\n                id: Math.random(), \r\n                speed: Math.random(), \r\n                latitude: Math.random(), \r\n                longitude: Math.random(), \r\n                elevation: Math.random(), \r\n                fuel: Math.random(), \r\n                damage: Math.random(), \r\n                nectar:Math.random(), \r\n                honey: Math.random(), \r\n                tansformationRate: Math.random()\r\n            }\r\n        ]\r\n        setBeesList(beesList.concat(arr));\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p><b>Search</b></p>\r\n            <form action=\"\">\r\n                <label htmlFor=\"\">Fuel({'<'}%)</label>\r\n                <input type=\"text\" value={params.fuel} onChange={(e) => handleChange(e, 'fuel')} />\r\n            </form>\r\n            <form action=\"\">\r\n                <label htmlFor=\"\">Damage({'>'}%)</label>\r\n                <input type=\"text\" value={params.damage} onChange={(e) => handleChange(e, 'damage')}/>\r\n            </form>\r\n            <button onClick={handleEearch}>search</button>\r\n            <button>reset</button>\r\n            <button onClick={handleAdd}>add</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Query;\r\n"]},"metadata":{},"sourceType":"module"}